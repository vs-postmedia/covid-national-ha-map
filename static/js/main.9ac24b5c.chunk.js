(this["webpackJsonpcovid-national-ha-map"]=this["webpackJsonpcovid-national-ha-map"]||[]).push([[0],{26:function(e,t,a){e.exports=a(89)},79:function(e,t,a){},80:function(e,t,a){},82:function(e,t,a){},83:function(e,t,a){},84:function(e,t,a){},85:function(e,t,a){},86:function(e,t,a){},87:function(e,t,a){},88:function(e,t,a){},89:function(e,t,a){"use strict";a.r(t);var o=a(0),n=a.n(o),r=a(23),i=a.n(r),s=a(6),p=a(7),c=a(9),l=a(8),u=a(24),h=a.n(u),m=a(4),d=a(3),f=a.n(d),v=a(25),g=a.n(v),y={getUrlParam:function(e){var t=window.location.search,a=new URLSearchParams(t).get(e);return a=a?a.toUpperCase():null,"prov"===e&&(a=this.validProvinceCodes.includes(a)?a:"BC"),a},map:function(e,t,a,o,n){return(e-t)*(n-o)/(a-t)+o},months:["Jan.","Feb.","Mar.","Apr.","May","June","July","Aug.","Sept.","Oct.","Nov.","Dec."],numberWithCommas:function(e){return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")},validProvinceCodes:["YT","NT","NU","BC","AB","SK","MB","ON","QC","NL","NB","PE","NS","CA"]},C=(a(79),function(e){return"\n\t\t<div>\n\t\t\t<h3>".concat(e.health_region,'</h3>\n\t\t\t<p class="prov-name">').concat(e.province,"</p>\n\n\t\t\t<p>There have been a total of <strong>").concat(y.numberWithCommas(e.cumulative_cases)," cases</strong> and <strong>").concat(y.numberWithCommas(e.cumulative_deaths)," deaths</strong> from the the coronavirus in this health region.</p>\n\t\t</div>\n\t")}),b=(a(80),a(81),function(e){Object(c.a)(a,e);var t=Object(l.a)(a);function a(e){var o;return Object(s.a)(this,a),(o=t.call(this,e)).state={},o.popup=new f.a.Popup({closeButton:!1,closeOnClick:!1}),o.showPopup=o.showPopup.bind(Object(m.a)(o)),o.hidePopup=o.hidePopup.bind(Object(m.a)(o)),o}return Object(p.a)(a,[{key:"componentDidMount",value:function(){var e=this.props.data;this.extent_calcuted=!1,this.range=this.props.range?this.props.range:[3,50],f.a.accessToken=this.props.config.accessToken,this.map=new f.a.Map({center:[this.props.center[1],this.props.center[0]],container:this.mapContainer,maxZoom:this.props.maxZoom,minZoom:this.props.minZoom,style:this.props.mapboxStyle,zoom:this.props.zoom}),e.features&&this.renderMap(e)}},{key:"componentDidUpdate",value:function(e){this.state.mapIsLoaded?this.props.data!==e.data&&this.map.getSource(this.props.mapDataSource).setData(this.props.data):this.renderMap(this.props.data)}},{key:"getExtent",value:function(e){var t=this,a=[];return e.forEach((function(e){a.push(parseFloat(e.properties[t.props.circleSizeMetric]))})),[Math.min.apply(Math,a),Math.max.apply(Math,a)]}},{key:"hidePopup",value:function(){this.map.getCanvas().style.cursor="",this.popup.remove()}},{key:"mapRange",value:function(e,t,a){return t[0]+(a-e[0])*(t[1]-t[0])/(e[1]-e[0])}},{key:"prepData",value:function(e){var t=this;this.extent_calcuted||(this.extent=this.getExtent(e.features),this.extent_calcuted=!0),e.features.forEach((function(e,a){var o=t.mapRange(t.extent,t.range,e.properties[t.props.circleSizeMetric]);e.properties.radius=4*Math.log(o)})),e.features.sort((function(e,a){return a[t.props.circleSizeMetric]-e[t.props.circleSizeMetric]}))}},{key:"setupPopupText",value:function(e){return C(e)}},{key:"showPopup",value:function(e){this.map.getCanvas().style.cursor="pointer";var t=this.setupPopupText(e.features[0].properties);this.popup.setLngLat(e.lngLat).setHTML(t).addTo(this.map)}},{key:"renderMap",value:function(e){var t=this;this.prepData(e),this.map.on("load",(function(){t.map.addSource("data-layer",{type:"geojson",data:e}),t.map.addLayer({id:"data-layer",type:"circle",source:"data-layer",paint:{"circle-color":t.props.circleColours,"circle-opacity":.2,"circle-radius":["interpolate",["linear"],["get",t.props.circleMarkerClassField],100,5,5e3,15],"circle-stroke-width":.5,"circle-stroke-color":"#0062a3"}}),t.map.addControl(new g.a({accessToken:t.props.config.accessToken,mapboxgl:f.a})),t.map.addControl(new f.a.NavigationControl),t.map.on("mouseenter","data-layer",t.showPopup),t.map.on("mouseleave","data-layer",t.hidePopup)})),this.setState({mapIsLoaded:!0})}},{key:"render",value:function(){var e=this;return n.a.createElement("div",{ref:function(t){return e.mapContainer=t}})}}]),a}(o.Component)),k=(a(82),function(e){Object(c.a)(a,e);var t=Object(l.a)(a);function a(e){var o;return Object(s.a)(this,a),(o=t.call(this,e)).state={data_all:[],data_display:[]},o}return Object(p.a)(a,[{key:"componentDidMount",value:function(){var e=this;h.a.get(this.props.data).then((function(t){e.setState({data_all:t.data,data_display:t.data})}))}},{key:"render",value:function(){return n.a.createElement(b,{center:this.props.mapOptions.center,circleColours:this.props.mapOptions.circleColours,circleMarkerClassField:this.props.mapOptions.classField,circleSizeMetric:this.props.mapOptions.circleSizeMetric,config:this.props.mapboxConfig,container:"mapview",data:this.state.data_display,data_all:this.state.data_all,mapboxStyle:this.props.mapboxStyle,mapDataSource:this.props.mapDataSource,maxZoom:this.props.mapOptions.maxZoom,minZoom:this.props.mapOptions.minZoom,zoom:this.props.mapOptions.zoom})}}]),a}(o.Component)),w=(a(83),{accessToken:"pk.eyJ1IjoibmdyaWZmaXRocy1wb3N0bWVkaWEiLCJhIjoiY2tra3BmcHI0MTcycjJucWtnNG9pZnlwcSJ9.HhYC3oRsfG2_BZH7jAsViQ"}),O=window.innerWidth,S={center:O>400?[54.7,-93.98]:[58.2,-94.1],circleColours:"#0062A3",circleSizeMetric:"cases_100k",classField:"cumulative_cases",maxZoom:5,minZoom:1.75,zoom:O>400?2.75:1.75};var M=function(){return n.a.createElement(o.Fragment,null,n.a.createElement("h2",null,"COVID-19 cases per 100,000 people, by health region"),n.a.createElement(k,{data:"https://vs-postmedia-data.sfo2.digitaloceanspaces.com/covid/covid-hr-cases.json",mapDataSource:"data-layer",mapboxConfig:w,mapboxStyle:"mapbox://styles/ngriffiths-postmedia/ckl2widct1euv17mkqgsryqff",mapOptions:S}),n.a.createElement("p",{className:"source"},"Source: ",n.a.createElement("a",{href:"https://opencovid.ca",target:"_blank",rel:"noopener noreferrer"},"COVID-19 Canada Open Data Working Group"),".  NOTE: Circles are sized based on the rate of COVID-19 cases per 100,000 people. Circles are positioned in the geographic centre of each health region."))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));a(84),a(85),a(86),a(87),a(88);i.a.render(n.a.createElement(M,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}},[[26,1,2]]]);
//# sourceMappingURL=main.9ac24b5c.chunk.js.map